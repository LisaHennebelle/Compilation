differents tests à faire sur minictest.c :

/*meme fichier avec autres erreurs pour le test

// declaration multiple de type void
void a, b = 1;
bool boo;

void main()
{
		int c = 3;

}
//declaration simple de type void ==> indique une declaration multiple 0.o
int a, b = 1;
void boo;

void main()
{
		int c = 3;

}

// mauvais type de main
int a, b = 1;
bool boo;

int main()
{
		int c = 3;

}

//mauvais nom de main
int a, b = 1;
bool boo;

void patatou()
{
		int c = 3;
}
//mauvaise condition de if
void a, b = 1;
bool boo;

void main()
{
		int c = 3;
		if (a + b)
		{
			int patatou = 1;
		}

}

//operation entre deux operandes de types differents
void a, b = 1;
bool boo;

void main()
{
		int c = 3;
		boo = boo + b;

}
*/


//        /*case NODE_DECL:
            offset = env_add_element(n->opr[0]->ident, n->opr[0], 4);
            if(offset < 0)
            {
                yyerror_passe1(&n, "Redefinition d'une variable\n");
                previousdef =  get_decl_node(n->ident);
                if (previousdef == NULL)
                {
                    printf("element non trouvé dans l'environnement\n");
                }
                else
                {
                    printf("Precedente definition : ligne %d\n", previousdef->lineno);
                }

            }
            else
            {
                printf("nouvelle declaration dans le contexte\n");
                n->opr[0]->offset = offset;
            }
            break;*/
